--KIỂM TRA TRẠNG THÁI BROKER CỦA CÁC DB
SELECT NAME, IS_BROKER_ENABLED FROM SYS.DATABASES

--BẬT TRẠNG THÁI BROKER CHO CHUNGKHOAN
ALTER DATABASE CHUNGKHOAN
SET ENABLE_BROKER WITH ROLLBACK IMMEDIATE

-- TẠO CÁC TABLE
USE [CHUNGKHOAN]
GO
CREATE TABLE LENHDAT
(
	ID INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	MACP NCHAR(7) NOT NULL,
	NGAYDAT DATETIME NOT NULL,
	LOAIGD NCHAR(1) NOT NULL,
	LOAILENH NCHAR(10) NOT NULL,
	SOLUONG INT NOT NULL,
	GIADAT FLOAT NOT NULL,
	TRANGTHAILENH NVARCHAR(30) NOT NULL,
)
GO
CREATE TABLE LENHKHOP
(
	IDKHOP INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	NGAYKHOP DATETIME NOT NULL,
	SOLUONGKHOP INT NOT NULL,
	GIAKHOP FLOAT NOT NULL,
	IDLENHDAT INT NOT NULL,
	CONSTRAINT FK_IDLENHDAT FOREIGN KEY(IDLENHDAT) REFERENCES LENHDAT(ID)
)
GO
CREATE TABLE BANGGIATRUCTUYEN
(
	MACK NCHAR(7) NOT NULL PRIMARY KEY,
	GIAMUABA FLOAT,
	SOLUONGMUABA INT,
	GIAMUAHAI FLOAT,
	SOLUONGMUAHAI INT,
	GIAMUAMOT FLOAT,
	SOLUONGMUAMOT INT,
	GIAKHOPTRUCTUYEN FLOAT,
	SOLUONGKHOPTRUCTUYEN INT,
	GIABANMOT FLOAT,
	SOLUONGBANMOT INT,
	GIABANHAI FLOAT,
	SOLUONGBANHAI INT,
	GIABANBA FLOAT,
	SOLUONGBANBA INT,
	TONGSOLUONG INT
)

GO
--RÀNG BUỘC

ALTER TABLE [dbo].[LENHDAT]
--DROP CONSTRAINT CK_LENHDAT
ADD CONSTRAINT CK_LENHDAT CHECK (SOLUONG >= 0 AND GIADAT >= 0 AND NGAYDAT <= GETDATE() AND LOAILENH = 'LO' AND (LOAIGD = 'M' OR LOAIGD = 'B')
	AND (TRANGTHAILENH = 'CHO KHOP' OR TRANGTHAILENH = 'KHOP LENH 1 PHAN' OR TRANGTHAILENH = 'KHOP HET' OR TRANGTHAILENH = 'DA HUY' OR TRANGTHAILENH = 'CHUA KHOP'))
ALTER TABLE [dbo].[LENHKHOP]
ADD CONSTRAINT CK_LENHKHOP CHECK (SOLUONGKHOP > 0 AND GIAKHOP >= 0 AND NGAYKHOP <= GETDATE())


-- THÊM VALUES CHO LENHDAT
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UES', GETDATE() , 'M', 'LO', 22, 1000, 'CHO KHOP')
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UES', GETDATE() , 'M', 'LO', 23, 1200, 'CHO KHOP')
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UES', GETDATE(), 'M', 'LO', 24, 2000, 'CHO KHOP')
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UES', GETDATE(), 'M', 'LO', 25, 3000, 'CHO KHOP')
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UES', GETDATE(), 'B', 'LO', 26, 4000, 'CHO KHOP')
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UES', GETDATE(), 'B', 'LO', 27, 5000, 'CHO KHOP')
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UES', GETDATE(), 'B', 'LO', 28, 6000, 'CHO KHOP')

INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UHT', GETDATE(), 'M', 'LO', 16, 1000, 'CHO KHOP')
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UHT', GETDATE(), 'M', 'LO', 17, 1500, 'CHO KHOP')
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UHT', GETDATE(), 'M', 'LO', 21, 2000, 'CHO KHOP')
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UHT', GETDATE(), 'B', 'LO', 19, 3000, 'CHO KHOP')
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UHT', GETDATE(), 'B', 'LO', 22, 3500, 'CHO KHOP')
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UHT', GETDATE(), 'B', 'LO', 23, 4000, 'CHO KHOP')

--
INSERT INTO dbo.LENHDAT (MACP, NGAYDAT, LOAIGD, LOAILENH, SOLUONG, GIADAT, TRANGTHAILENH)
VALUES ('UES', GETDATE() , 'M', 'LO', 26, 3500, 'CHO KHOP')

/*THEM VALUES CHO LENHKHOP*/
INSERT INTO dbo.LENHKHOP (NGAYKHOP, SOLUONGKHOP, GIAKHOP, IDLENHDAT)
VALUES (GETDATE(), 10, 1000, 4),
		(GETDATE(), 10, 1000, 5);


INSERT INTO dbo.LENHKHOP (NGAYKHOP, SOLUONGKHOP, GIAKHOP, IDLENHDAT)
VALUES (GETDATE(), 11, 2000, 10),
(GETDATE(), 11, 2000, 12);
INSERT INTO dbo.LENHKHOP (NGAYKHOP, SOLUONGKHOP, GIAKHOP, IDLENHDAT)
VALUES (GETDATE(), 20, 1000, 1),
(GETDATE(), 20, 1000, 5);

--XOÁ TRIGGER
DROP TRIGGER TR_LENHDAT
DROP TRIGGER TR_LENHKHOP
DROP TRIGGER TR_CHECK_LENHDAT
GO
------------TẠO TRIGGER CHO TABLE LENHDAT---------------

CREATE TRIGGER TR_LENHDAT
ON [dbo].[LENHDAT] AFTER INSERT, UPDATE
AS
BEGIN
	-- MACP DA XUAT HIEN O BANGGIATRUCTUYEN -> UPDATE
	IF EXISTS (SELECT MACK 
				FROM BANGGIATRUCTUYEN 
				WHERE MACK = (SELECT MACP FROM inserted))
	BEGIN
	DECLARE @MACOPHIEU NCHAR(7),
			@GIAMUAMOT FLOAT, @SOLUONGMUAMOT INT,
			@GIAMUAHAI FLOAT, @SOLUONGMUAHAI INT,
			@GIAMUABA FLOAT, @SOLUONGMUABA INT,

			@GIABANMOT FLOAT, @SOLUONGBANMOT INT,
			@GIABANHAI FLOAT, @SOLUONGBANHAI INT,
			@GIABANBA FLOAT, @SOLUONGBANBA INT,
			@TRANGTHAI NVARCHAR(30)
	
	SET @TRANGTHAI = (SELECT TRANGTHAILENH FROM inserted)
	SET @MACOPHIEU = (SELECT MACP FROM inserted)
	SET @GIAMUAMOT = (SELECT MAX(GIADAT)
						FROM LENHDAT
						WHERE MACP = @MACOPHIEU AND LOAIGD = 'M' AND SOLUONG > 0 AND CAST(NGAYDAT AS DATE) = CAST(GETDATE() AS DATE) AND TRANGTHAILENH <> N'DA HUY')		
	SET @SOLUONGMUAMOT = (SELECT SUM(SOLUONG)
						FROM LENHDAT
						WHERE MACP = @MACOPHIEU AND LOAIGD = 'M' AND SOLUONG > 0 AND GIADAT = @GIAMUAMOT AND TRANGTHAILENH <> N'DA HUY')
						--KHOP HET -> SOLUONG = 0
	SET @GIAMUAHAI = (SELECT MAX(GIADAT)
						FROM LENHDAT
						WHERE MACP = @MACOPHIEU AND LOAIGD = 'M' AND SOLUONG > 0 AND GIADAT < @GIAMUAMOT AND CAST(NGAYDAT AS DATE) = CAST(GETDATE() AS DATE) AND TRANGTHAILENH <> N'DA HUY')
	SET @SOLUONGMUAHAI = (SELECT SUM(SOLUONG)
							FROM LENHDAT
							WHERE MACP = @MACOPHIEU AND LOAIGD = 'M' AND SOLUONG > 0 AND GIADAT = @GIAMUAHAI AND TRANGTHAILENH <> N'DA HUY')

	SET @GIAMUABA = (SELECT MAX(GIADAT)
						FROM LENHDAT
						WHERE MACP = @MACOPHIEU AND LOAIGD = 'M' AND SOLUONG > 0 AND GIADAT < @GIAMUAHAI AND CAST(NGAYDAT AS DATE) = CAST(GETDATE() AS DATE) AND TRANGTHAILENH <> N'DA HUY')
	SET @SOLUONGMUABA = (SELECT SUM(LENHDAT.SOLUONG)
							FROM LENHDAT
							WHERE MACP = @MACOPHIEU AND LOAIGD = 'M' AND SOLUONG > 0 AND GIADAT = @GIAMUABA AND TRANGTHAILENH <> N'DA HUY')
	

	SET @GIABANMOT = (SELECT MIN(GIADAT)
						FROM LENHDAT
						WHERE MACP = @MACOPHIEU AND LOAIGD = 'B' AND SOLUONG > 0 AND CAST(NGAYDAT AS DATE) = CAST(GETDATE() AS DATE) AND  TRANGTHAILENH <> N'DA HUY')
	SET @SOLUONGBANMOT = (SELECT SUM(SOLUONG)
							FROM LENHDAT
							WHERE MACP = @MACOPHIEU AND LOAIGD = 'B' AND SOLUONG > 0 AND GIADAT = @GIABANMOT AND TRANGTHAILENH <> N'DA HUY')
			

	SET @GIABANHAI = (SELECT MIN(GIADAT)
						FROM LENHDAT
						WHERE MACP = @MACOPHIEU AND LOAIGD = 'B' AND SOLUONG > 0 AND CAST(NGAYDAT AS DATE) = CAST(GETDATE() AS DATE) AND GIADAT > @GIABANMOT AND TRANGTHAILENH <> N'DA HUY')
	SET @SOLUONGBANHAI = (SELECT SUM(SOLUONG)
							FROM LENHDAT
							WHERE MACP = @MACOPHIEU AND LOAIGD = 'B' AND SOLUONG > 0 AND GIADAT = @GIABANHAI AND TRANGTHAILENH <> N'DA HUY')


	SET @GIABANBA = (SELECT MIN(GIADAT)
						FROM LENHDAT
						WHERE MACP = @MACOPHIEU AND LOAIGD = 'B' AND SOLUONG > 0 AND CAST(NGAYDAT AS DATE) = CAST(GETDATE() AS DATE) AND GIADAT > @GIABANHAI AND TRANGTHAILENH <> N'DA HUY')
	SET @SOLUONGBANBA = (SELECT SUM(SOLUONG)
							FROM LENHDAT
							WHERE MACP = @MACOPHIEU AND LOAIGD = 'B' AND SOLUONG > 0 AND GIADAT = @GIABANBA AND TRANGTHAILENH <> N'DA HUY')
	
	UPDATE BANGGIATRUCTUYEN
	SET GIAMUAMOT = @GIAMUAMOT, SOLUONGMUAMOT = @SOLUONGMUAMOT,
		GIAMUAHAI = @GIAMUAHAI, SOLUONGMUAHAI = @SOLUONGMUAHAI,
		GIAMUABA = @GIAMUABA, SOLUONGMUABA = @SOLUONGMUABA,

		GIABANMOT = @GIABANMOT, SOLUONGBANMOT = @SOLUONGBANMOT,
		GIABANHAI = @GIABANHAI, SOLUONGBANHAI = @SOLUONGBANHAI,
		GIABANBA = @GIABANBA, SOLUONGBANBA = @SOLUONGBANBA
	FROM BANGGIATRUCTUYEN
	WHERE MACK = @MACOPHIEU
	END
	ELSE --MACP CHUA XUAT HIEN TRONG BANGGIATRUCTUYEN -> INSERT
	BEGIN
		DECLARE @MACK NCHAR(7)
		SET @MACK = (SELECT MACP FROM inserted)
		SET @GIAMUAMOT = (SELECT MAX(GIADAT)
						FROM LENHDAT
						WHERE MACP = @MACK AND LOAIGD = 'M' AND SOLUONG > 0 AND CAST(NGAYDAT AS DATE) = CAST(GETDATE() AS DATE))
		SET @SOLUONGMUAMOT = (SELECT SUM(SOLUONG)
							FROM LENHDAT 
							WHERE MACP = @MACK AND LOAIGD = 'M' AND SOLUONG > 0 AND GIADAT = @GIAMUAMOT) 

		SET @GIABANMOT = (SELECT MIN(GIADAT)
						FROM LENHDAT
						WHERE MACP = @MACK AND LOAIGD = 'B' AND SOLUONG > 0 AND CAST(NGAYDAT AS DATE) = CAST(GETDATE() AS DATE))
		SET @SOLUONGBANMOT = (SELECT SUM(SOLUONG)
							FROM LENHDAT 
							WHERE MACP = @MACK AND LOAIGD = 'B' AND SOLUONG > 0 AND GIADAT = @GIABANMOT) 
		
		INSERT INTO BANGGIATRUCTUYEN(MACK, GIAMUAMOT, SOLUONGMUAMOT, GIABANMOT, SOLUONGBANMOT, TONGSOLUONG)
		VALUES(@MACK, @GIAMUAMOT, @SOLUONGMUAMOT, @GIABANMOT, @SOLUONGBANMOT, 0)
	END
END

GO


CREATE TRIGGER TR_CHECK_LENHDAT 
ON [dbo].[LENHDAT] AFTER UPDATE
AS
BEGIN
	DECLARE @IDLENHDAT INT,
			@TRANGTHAISAU NVARCHAR(30),
			@TRANGTHAITRUOC NVARCHAR(30)

	SET @IDLENHDAT = (SELECT ID FROM inserted)

	SET @TRANGTHAITRUOC = (SELECT TRANGTHAILENH FROM deleted)
	SET @TRANGTHAISAU = (SELECT TRANGTHAILENH FROM inserted)

	--KHONG CHO UPDATE MACP, LOAIGD
	IF UPDATE(MACP) OR UPDATE(LOAIGD)
	BEGIN
		RAISERROR ('KHONG THE THAY DOI GIA TRI NAY', 16, 1)
		ROLLBACK TRAN
	END

	-- CHI CHO PHEP LOAILENH LA LO
	IF EXISTS (SELECT MACP FROM inserted WHERE LOAILENH <> N'LO')
	BEGIN
		RAISERROR ('HIEN TAI HE THONG CHI CO LOAI LENH LO', 16, 1)
		ROLLBACK TRAN
	END

	--KHONG DUOC HUY LENH KHOP HET
	IF @TRANGTHAITRUOC = N'KHOP HET' AND @TRANGTHAISAU = N'DA HUY'
	BEGIN
		RAISERROR ('KHONG THE HUY LENH DA KHOP HET', 16, 1)
		ROLLBACK TRAN
	END

	-- UPDATE NGAY DAT KHI CO BAT KI CHINH SUA NAO TREN BANG LENHDAT
	UPDATE [dbo].[LENHDAT]
	SET NGAYDAT = GETDATE()
	WHERE ID = @IDLENHDAT
END


GO
-------------- TẠO TRIGGER CHO LENHKHOP-----------------
DROP TRIGGER TR_LENHKHOP
GO
CREATE TRIGGER TR_LENHKHOP
ON [dbo].[LENHKHOP] AFTER INSERT
AS
BEGIN
	DECLARE	@ID_LD1 INT, 
			@ID_LD2 INT,
			@MACOPHIEU_LD1 NCHAR(7),
			@MACOPHIEU_LD2 NCHAR(7),
			@SOLUONG INT, --SO LUONG TU LENH KHOP
			@SOLUONG_LD1 INT, -- SO LUONG TU LENHDAT
			@SOLUONG_LD2 INT,
			@GIAKHOP FLOAT

	SET @ID_LD1 = (SELECT IDLENHDAT FROM inserted WHERE IDKHOP = (SELECT MIN(IDKHOP) FROM inserted))
	SET @ID_LD2 = (SELECT IDLENHDAT FROM inserted WHERE IDLENHDAT <> @ID_LD1)

	SET @MACOPHIEU_LD1 = (SELECT LENHDAT.MACP FROM LENHDAT WHERE LENHDAT.ID = @ID_LD1)
	SET @MACOPHIEU_LD2 = (SELECT LENHDAT.MACP FROM LENHDAT WHERE LENHDAT.ID = @ID_LD2)
	SET @SOLUONG = (SELECT TOP(1) SOLUONGKHOP FROM inserted) 
	SET @SOLUONG_LD1 = (SELECT SOLUONG FROM LENHDAT WHERE  LENHDAT.ID = @ID_LD1)
	SET @SOLUONG_LD2 = (SELECT SOLUONG FROM LENHDAT WHERE  LENHDAT.ID = @ID_LD2)
	
	--KIEM TRA TRANG THAI LENH
	IF EXISTS(SELECT MACP FROM LENHDAT, inserted WHERE LENHDAT.ID = inserted.IDLENHDAT AND (LENHDAT.TRANGTHAILENH = N'DA HUY' OR LENHDAT.TRANGTHAILENH = N'KHOP HET')
		OR @SOLUONG > @SOLUONG_LD1 OR @MACOPHIEU_LD1 <> @MACOPHIEU_LD2)
	BEGIN
		RAISERROR ('LENH KHOP KHONG HOP LE, KIEM TRA SOLUONG, TRANGTHAI, MACP CUA LENHDAT', 16, 1)
		DELETE FROM LENHKHOP
		WHERE IDKHOP = (SELECT MIN(IDKHOP) FROM inserted) OR IDKHOP = (SELECT MAX(IDKHOP) FROM inserted)
	END
	ELSE
	BEGIN
		--UPDATE SOLUONG VA TRANGTHAILENH CHO LENHDAT CO RECORD KHOP 1
		IF @SOLUONG = @SOLUONG_LD1
		BEGIN
			UPDATE LENHDAT
			SET SOLUONG = 0,
				TRANGTHAILENH = N'KHOP HET'
			WHERE LENHDAT.ID = @ID_LD1
		END
		ELSE IF @SOLUONG < @SOLUONG_LD1
		BEGIN
		UPDATE LENHDAT
		SET SOLUONG = SOLUONG - @SOLUONG,
			TRANGTHAILENH = N'KHOP LENH 1 PHAN'
		WHERE LENHDAT.ID = @ID_LD1
		END
	
		--UPDATE SOLUONG VA TRANGTHAILENH CHO LENHDAT CO RECORD KHOP 2
		IF @SOLUONG >= @SOLUONG_LD2
		BEGIN
			UPDATE LENHDAT
			SET SOLUONG = 0,
				TRANGTHAILENH = N'KHOP HET'
			WHERE LENHDAT.ID = @ID_LD2
		END
		ELSE IF @SOLUONG < @SOLUONG_LD2
		BEGIN
			UPDATE LENHDAT
			SET SOLUONG = SOLUONG - @SOLUONG,
				TRANGTHAILENH = N'KHOP LENH 1 PHAN'
			WHERE LENHDAT.ID = @ID_LD2
		END


	-- UPDATE BANGGIATRUCTUYEN
		SET @GIAKHOP = (SELECT TOP(1) GIAKHOP FROM inserted)
		UPDATE [dbo].[BANGGIATRUCTUYEN]
		SET GIAKHOPTRUCTUYEN = @GIAKHOP,
			SOLUONGKHOPTRUCTUYEN = @SOLUONG,
			TONGSOLUONG = TONGSOLUONG + @SOLUONG
		WHERE MACK = @MACOPHIEU_LD1
	END
END